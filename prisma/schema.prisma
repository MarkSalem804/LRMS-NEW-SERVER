// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  firstName String
  lastName  String
  role      String
  isActive  Boolean   @default(true)
  isChanged Boolean   @default(false)
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  profile   profile[]
}

model profile {
  id           Int        @id @default(autoincrement())
  userId       Int?
  user         user?      @relation(fields: [userId], references: [id])
  address      String?
  firstName    String?
  lastName     String?
  phoneNumber  String?
  emailAddress String?
  employeeId   Int?
  positionId   Int?
  position     positions? @relation(fields: [positionId], references: [id])
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model positions {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  profile     profile[]
}

model learningAreas {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model gradeLevels {
  id          Int      @id @default(autoincrement())
  name        String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
